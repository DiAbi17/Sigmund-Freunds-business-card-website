import pytest
from rest_framework.test import APIClient
from api.models import Consultation

@pytest.mark.django_db
def test_valid_consultation_submission_and_deletion():
    client = APIClient()
    data = {
        "name": "–ò–≤–∞–Ω",
        "email": "ivan@example.com",
        "message": "–•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
    }

    # 1. –°–æ–∑–¥–∞–Ω–∏–µ
    response = client.post("/api/consult/", data, format='json')
    assert response.status_code == 201
    assert response.data["status"] == "success"
    created = response.data["data"]
    assert created["email"] == data["email"]
    assert created["name"] == data["name"]
    print("POST-–∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ.")

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –±–∞–∑–µ
    consultation_id = created["id"]
    consultation = Consultation.objects.get(id=consultation_id)
    assert consultation.email == data["email"]
    print(f"–û–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –≤ –±–∞–∑–µ: ID={consultation.id}, Email={consultation.email}")

    # 3. –£–¥–∞–ª–µ–Ω–∏–µ
    del_response = client.delete(f"/api/consultations/{consultation_id}/")
    assert del_response.status_code == 200
    assert del_response.data["status"] == "deleted"
    print(f"–û–±—ä–µ–∫—Ç ID={consultation_id} —É–¥–∞–ª—ë–Ω.")

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    assert not Consultation.objects.filter(id=consultation_id).exists()
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ ‚Äî –æ–±—ä–µ–∫—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ.")


@pytest.mark.django_db
def test_invalid_consultation_submission():
    client = APIClient()
    data = {
        "name": "",
        "email": "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π email",
        "message": ""
    }

    response = client.post("/api/consult/", data, format='json')
    assert response.status_code == 400
    print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é.")

    # –í—ã–≤–æ–¥ –æ—à–∏–±–æ–∫
    errors = response.data
    for field, messages in errors.items():
        print(f"üîç –û—à–∏–±–∫–∞ –≤ –ø–æ–ª–µ '{field}': {messages}")
